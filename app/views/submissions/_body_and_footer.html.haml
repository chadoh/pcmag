.body
  - if submission.photo?
    = image_tag submission.photo.url(:medium)
  - unless submission.body.blank?
    = sanitize submission.body
%footer.submission-details

  - if (@show_author.nil? or @show_author) and (editor_or_author?(submission) or params[:controller] == 'magazines')
    %p.author
      - if the_editor?
        = mail_to submission.email, email_image(submission.author_name)
      - if !!submission.author
        = link_to_unless_current submission.author_name, person_path(submission.author)
      - else
        = submission.author_name

  - if @show_score
    = render :partial => 'scores/form', :locals => { :score => Score.with(@attendee, packlet) }

  -# TODO: show all meetings that a submission has been scheduled for
  - if submission.queued? and page_appropriate?
    %p.queued
      Scheduled to be reviewed
      =link_to "in #{distance_of_time_in_words(Time.now, submission.meetings.first.datetime)}", meeting_path(submission.meetings.first)

  - if submission.reviewed? and page_appropriate?
    %p.reviewed
      Reviewed
      - if (time = submission.meetings.first.datetime) > Time.now
        =link_to "in #{distance_of_time_in_words(Time.now, time)}", meeting_path(submission.meetings.first)
      - else
        =link_to "#{distance_of_time_in_words(Time.now, time)} ago", meeting_path(submission.meetings.first)

  - if submission.scored? and current_person_can_see_score_for?(submission)
    %p.scored
      Score:
      %meter{ :min => 0, :max => 10,
              :data => { :average => average = @average.presence || submission.magazine.try(:average_score).presence },
              :value => score = submission.average_score,
              :title => "#{score} out of 10#{" (average: #{average})" if average.present?}" }
        #{score}#{ " (average: #{average})" if average.present?}

  - if the_editor? or (submission.author == current_person and [:draft, :submitted, :queued].include? submission.state)
    %nav.actions
      %ul
        %li= link_to "Edit", edit_submission_url(submission)

        - if submission.draft?
          %li
            = form_for submission, :html => { :class => "button_to" } do |f|
              = f.hidden_field :state, :value => Submission.state(:submitted)

              = f.submit "Submit", :class => "link"
        - if (the_editor? or submission.state != :published) and !(params[:controller] == "magazines" && params[:action] == "highest_scores")
          %li
            = button_to "Delete", submission_url(submission),
                         :method => :delete,
                         :confirm => "Are you really sure you want to totally destroy all record of this submission?#{" If you just want to unschedule it, you can do that by dragging it to the \"Unscheduled\" section on the \"Submissions\" page." if the_editor?}",
                         :class => "link destroy"
