.body
  - if submission.photo?
    = image_tag submission.photo.url(:medium)
  - unless submission.body.blank?
    = sanitize submission.body
%footer.submission-details

  - if submission.published? || ((@show_author.nil? || @show_author) && (communicates_or_is_author?(submission) || params[:controller] == 'magazines'))
    %p.author
      - if communicates?(submission)
        = mail_to submission.email, submission.email, class: 'mailto'
      - if !!submission.author
        = link_to_if !current_page?(submission.author) && submission.pseudonym_link,
            submission.author_name, submission.author, class: 'name'
      - else
        = submission.author_name

  - if @show_score
    = render :partial => 'scores/form', :locals => { :score => Score.with(@attendee, packlet) }

  -# TODO: show all meetings that a submission has been scheduled for
  - if submission.queued? and page_appropriate?
    %p.queued
      Scheduled to be reviewed
      =link_to "in #{distance_of_time_in_words(Time.now, submission.meetings.first.datetime)}", meeting_path(submission.meetings.first)

  - if submission.reviewed? and page_appropriate?
    %p.reviewed
      Reviewed
      - if (time = submission.meetings.first.datetime) > Time.now
        =link_to "in #{distance_of_time_in_words(Time.now, time)}", meeting_path(submission.meetings.first)
      - else
        =link_to "#{distance_of_time_in_words(Time.now, time)} ago", meeting_path(submission.meetings.first)

  - if current_person_can_see_score_for?(submission)
    %p.scored
      Score:
      %meter{ :min => 0, :max => 10,
              :data => { :average => average = @average.presence || submission.magazine.try(:average_score).presence },
              :value => score = submission.average_score,
              :title => "#{score} out of 10#{" (average: #{average})" if average.present?}" }
        #{score}

  - if submission.published? and page_appropriate? and !(params['controller'] == 'pages' && params['action'] == 'show')
    %p.published
      Published in #{link_to submission.magazine.present_name, magazine_path(submission.magazine)}

  - if submission.rejected? and page_appropriate?
    %p.rejected
      This didn't quite make it into #{link_to submission.magazine.present_name, magazine_path(submission.magazine)}.
      - if submission.author == current_person
        Please #{link_to "try again", new_submission_path}.

  - if communicates?(submission) || (submission.author == current_person && [:draft, :submitted, :queued].include?(submission.state))
    %nav.actions
      - if submission.draft?
        = form_for submission, html: { class: "button_to" } do |f|
          = f.hidden_field :state, value: Submission.state(:submitted)
          = f.submit "Submit", class: "link"
      = link_to t('edit').html_safe, edit_submission_url(submission), title: "Edit"
      - if (communicates?(submission) || submission.state != :published) && !(params[:controller] == "magazines" && params[:action] == "highest_scores")
        = link_to t('destroy').html_safe, submission_url(submission),
          title: "Delete",
          method: :delete,
          confirm: "Are you really sure you want to totally destroy all record of this submission?#{' If you just want to unschedule it, you can do that by dragging it to the "Unscheduled" section on the "Submissions" page.' if communicates?(submission)}",
          class: "link destroy"
      - if submission.published? && !submission.magazine.notification_sent?
        = form_for submission, html: { class: "button_to" } do |f|
          = f.hidden_field :state, value: Submission.state(:rejected)
          %button.link{ title: "Unpublish (#{submission} will no longer be part of #{submission.magazine})", confirm: "Are you sure that #{submission} shouldn't be published in #{submission.magazine}?" }
            = fa_icon "eject"
