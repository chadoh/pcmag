= simple_form_for @submission, :html => { :multipart => true } do |f|
  = error_messages

  %label{ :for => 'submission_title'} Title
  %h1
    = f.text_field :title, :autofocus => true, class: 'no-focus-outline max-width'
  %label{ :for => 'wysihtml5-textarea'} Body
  #submission-body-container
    #wysihtml5-toolbar{style: "display: none;"}
      %a.btn{"data-wysihtml5-command" => "bold", :tabindex => '-1'}>
        %i.icon-bold
      %a.btn{"data-wysihtml5-command" => "italic", :tabindex => '-1'}>
        %i.icon-italic
      %a.btn{"data-wysihtml5-command" => "underline", :tabindex => '-1'}>
        %i.icon-underline 
      %a.btn.btn-group-separator{"data-wysihtml5-command" => "insertOrderedList", :tabindex => '-1'}>
        %i.icon-list-ol
      %a.btn{"data-wysihtml5-command" => "insertUnorderedList", :tabindex => '-1'}>
        %i.icon-list-ul
      %a.btn.btn-group-separator{"data-wysihtml5-command" => "Outdent", :tabindex => '-1'}>
        %i.icon-indent-left
      %a.btn{"data-wysihtml5-command" => "Indent", :tabindex => '-1'}>
        %i.icon-indent-right
      %a.btn.btn-group-separator{"data-wysihtml5-command" => "justifyCenter", :tabindex => '-1'}>
        %i.icon-align-center
      %a.btn{"data-wysihtml5-command" => "justifyLeft", :tabindex => '-1'}>
        %i.icon-align-left
      %a.btn{"data-wysihtml5-command" => "justifyRight", :tabindex => '-1'}>
        %i.icon-align-right
      %a.btn{"data-wysihtml5-command" => "justifyFull", :tabindex => '-1'}>
        %i.icon-align-justify
      %a.btn.btn-group-separator{"data-wysihtml5-command" => "insertImage", :tabindex => '-1'}>
        %i.icon-picture
      %a.btn{"data-wysihtml5-command" => "createLink", :tabindex => '-1'}>
        %i.icon-link
      %a.btn.btn-group-separator{"data-wysihtml5-action" => "change_view", :tabindex => '-1'}>
        %i.icon-code
      %div#add-link{"data-wysihtml5-dialog" => "createLink", style: "display: none;", :tabindex => '-1'}
        %label
          Link to:
          %input.text{"data-wysihtml5-dialog-field" => "href", value: "http://"}
        %a{"data-wysihtml5-dialog-action" => "save"} OK
        %a{"data-wysihtml5-dialog-action" => "cancel"} Cancel
      %div#add-image{"data-wysihtml5-dialog" => "insertImage", style: "display: none;", :tabindex => '-1'}
        %label
          Picture:
          %input.text{"data-wysihtml5-dialog-field" => "src", value: "http://"}
        %a{"data-wysihtml5-dialog-action" => "save"} OK
        %a{"data-wysihtml5-dialog-action" => "cancel"} Cancel
    = f.text_area :body, id: 'wysihtml5-textarea', class: 'no-focus-outline'

  = f.input :photo, :label => "Or, submit an image:"
  = f.input :state, :as => :hidden
  - if person_signed_in?
    = f.input :pseudonym_name, label: "Pseudonym (if you'd like to obscure your identity for this one)"
    = f.input :pseudonym_link,
      label: "Link this pseudonym to your profile as if it were your real name",
      hint: "(If you only want to <em>partially</em> obscure your identity for this one.)".html_safe,
      as: :boolean
    - if communicates? :any
      = f.input :author,
        as:         :string,
        label:      "Author (you can submit for anyone)",
        input_html: { :value => "#{resource.author(true).name_and_email if @submission.author(true)}" },
        hint:       "You can even make an account for someone by entering their name & email"
      = f.association :magazine, label_method: :to_s
    - else
      = f.input :author_id, :as => :hidden
  - else
    - if resource.respond_to? :mean
      .contextual-info
        -# this is bullshit; it's a honeypot
        = f.input :mean, :label => "mean (please leave blank)", input_html: { :tabindex => -1 }
        = f.input :tolerance, :label => "tolerance (please leave blank)", input_html: { :tabindex => -1 }
        = f.input :legality, :label => "legality (please leave blank)", input_html: { :tabindex => -1 }
        = f.input :preference, :label => "preference (please leave blank)", input_html: { :tabindex => -1 }
        = f.input :encoding, :label => "encoding (please leave blank)", input_html: { :tabindex => -1 }
    = f.input :author_name, :label => "Your Name", input_html: { tabindex: ''}
    = f.input :author_email, :label => "Your Email Address", input_html: { tabindex: ''}
  -# submit/preview/save
  - if person_signed_in?
    - if !@submission.draft?
      = f.button :submit, t('save'),    name: "save"
    - else
      = f.button :submit, t('submit!'), name: "submit"
      or
      = f.button :submit, t('preview'), name: "preview", class: "link"
  - else
    =   f.button :submit, t('submit!'), name: "submit"

- if communicates? :any
  = content_for :javascript do
    :javascript
      $(function(){
        var email = $("#submission_author").val().split(' ').pop(),
            span  = $("span#save_for_later");
        if (email != "#{current_person.email}") {
          span.hide(); }
        $("#submission_author")
          .autocomplete({
            source: "/people/autocomplete",
            minLength: 2,
            select: function(evnt, ui) {
              $(this).val(ui.item.value);
            }
          }).keyup(function(){
            var email = $(this).val().split(' ').pop();
            if (email != "#{current_person.email}") {
              span.hide(); }
            else {
              span.show() }
          });
      });

= content_for :javascript do
  :javascript
    $(function(){
      if ($("#submission_pseudonym_name").val() == '') {
        $("#submission_pseudonym_link").closest('div').hide(); }
      $("#submission_pseudonym_name").keyup(function(){
        var val = $(this).val();
        if ( !(val.match(/^\s*$/)) && !(val == '')) {
          $("#submission_pseudonym_link").closest('div').slideDown(); }
        else {
          $("#submission_pseudonym_link").closest('div').slideUp(); }
      });
      var editor = new wysihtml5.Editor("wysihtml5-textarea", {
        toolbar:      "wysihtml5-toolbar",
        stylesheets:  "#{stylesheet_path('wysiwyg')}",
        parserRules:  wysihtml5ParserRules
      });
    });