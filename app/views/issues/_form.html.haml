= simple_form_for @issue, html: { multipart: true } do |f|
  = error_messages

  = f.input :title, :input_html => { :placeholder => "You can leave this blank for now" }
  = f.input :nickname
  = f.input :accepts_submissions_from,  as: :string, input_html: { value: resource.accepts_submissions_from .strftime("%Y-%m-%d") }
  = f.input :accepts_submissions_until, as: :string, input_html: { value: resource.accepts_submissions_until.strftime("%Y-%m-%d") }
  = f.input :publication_id, as: :hidden
  - if @issue.published?
    = f.input :published_on,            as: :string, input_html: { value: resource.published_on             .strftime("%Y-%m-%d") }
  = f.input :pdf, label: "Upload a #{'different ' if @issue.pdf?}pdf of the issue",
    hint: "#{"<br>#{link_to 'View the current pdf', @issue.pdf.url, 'data-target' => 'new'}" if @issue.pdf? }".html_safe
  = f.input :cover_art, label: "Upload #{'different ' if @issue.cover_art?}cover art for the issue",
    hint: "#{"<br>#{image_tag @issue.cover_art.url(:thumb)}" if @issue.cover_art?}".html_safe
  = f.button :submit

:javascript
  $(function(){
    $("input:regex(id,issue_accepts_submissions_(from|until)|published_on)").AnyTime_picker({
      format: "%Y-%m-%d",
      placement: "inline"
    });
  });
