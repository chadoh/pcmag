%li[magazine]{ :class => !magazine.cover_art? && 'bordered' }
  .cover-art
    .img
      - if magazine.viewable_by?(current_person, :or_adjacent)
        = link_to [magazine] do
          = image_tag magazine.cover_art.url(:thumb), alt: "" if magazine.cover_art?
      - else
        = image_tag magazine.cover_art.url(:thumb), alt: "" if magazine.cover_art?
    %header
      %h2
        = magazine.published? ? link_to(magazine, [magazine]) : magazine
      = link_to "Browse online", [magazine]                               if magazine.viewable_by?(current_person, :or_adjacent)
      = link_to "Download pdf",  magazine.pdf.url, 'data-target' => 'new' if magazine.pdf?
      = link_to "View meetings", meetings_path(m: magazine.id)            if views? magazine
      = link_to "Staff list",    staff_for_magazine_path(magazine)        if orchestrates? magazine, :or_adjacent
    %span.timeframe
      - if magazine.published?
        Published on
        %time{ :datetime => magazine.published_on }= pretty_date(magazine.published_on)
      - elsif magazine.accepts_submissions_until < Time.now
        = timeframe(magazine.accepts_submissions_from, magazine.accepts_submissions_until)
      - else
        Submit by #{pretty_date(magazine.accepts_submissions_until)}
    - if orchestrates? magazine
      .small.right
        = link_to t('edit').html_safe, edit_magazine_url(magazine), title: 'Edit magazine details; upload cover art & a pdf.'
        = link_to t('destroy').html_safe, magazine_url(magazine),
          method: :delete,
          confirm: "You're saying this magazine never actually happened. All of its meetings will be unassociated with any magazine. If this magazine has been published, all of the submissions submitted for it will be simply \"Scored\" again.",
          class: 'link destroy',
          title: "Destroy this magazine and everything associated with it."
  - if orchestrates?(magazine) && magazine.timeframe_freshly_over?
    %div= link_to "View the highest-scored submissions", highest_scored_for_magazine_path(magazine)
